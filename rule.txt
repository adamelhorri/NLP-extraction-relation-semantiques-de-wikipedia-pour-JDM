1;NOUN ADJ* ADJ ADJ CCONJ(et) ADJ PRON VERB*  => r_agent-1 ;1
2;ADJ ADJ* ADJ CCONJ(et) ADJ PRON VERB*  => r_agent-1 ;1
3;ADJ ADJ* CCONJ(et) ADJ PRON VERB*  => r_agent-1 ;1
4;PRON VERB* ADP(dans) DET NOUN*  => r_agent-1-1;1
5;PRON VERB* ADP(dans) DET NOUN ADJ*  => r_agent-1-1;1
6;DET NOUN* ADJ CCONJ(et) ADJ ADP(de) DET NOUN*  => r_agent-1 ;1
7;AUX(être) VERB* ADP(sous) DET NOUN*  => r_agent-1-1;1
8;AUX(être) VERB* ADP(sous) DET NOUN ADJ*  => r_agent-1-1;1
9;AUX(être) VERB* ADP(sous) DET NOUN ADJ PRON*  => r_agent-1-1;1
10;AUX(être) VERB* ADP(sous) DET NOUN ADJ PRON PRON VERB*  => r_agent-1-1;1
11;PROPN ADJ* PUNCT(,) PRON PRON VERB*  => r_agent-1 ;1
12;PROPN ADJ* PUNCT(,) PRON PRON VERB(avoir) ADV NUM NOUN*  => r_agent-1 ;1
13;PRON VERB* ADV NUM NOUN*  => r_agent-1-1;1
2;DET NOUN* X NOUN CCONJ(et) NOUN*  => r_agent-1-1;1
3;PUNCT(,) VERB* PUNCT()) VERB(qualifier) PRON PRON VERB(avoir) NOUN*  => r_agent-1-1;1
4;PRON VERB* NOUN ADP(à) DET NOUN*  => r_agent-1-1;1
5;DET NOUN* CCONJ(ou) ADV DET NOUN*  => r_agent-1 ;1
6;DET NOUN* ADP(de) DET NOUN*  => r_agent-1-1;1
14;AUX(être) VERB* ADV ADP(comme) DET ADV ADJ*  => r_agent-1-1;1
15;AUX(être) VERB* ADV ADP(comme) DET ADV ADJ NOUN*  => r_agent-1-1;1
16;AUX(être) VERB* ADV ADP(comme) DET ADV ADJ NOUN ADP*  => r_agent-1-1;1
17;ADV ADJ* NOUN ADP(de) DET NOUN PUNCT(,) PRON VERB*  => r_agent-1 ;1
24;NOUN ADJ* PUNCT(() PROPN X PUNCT()) AUX*  => r_isa ;30
25;DET NOUN* ADJ VERB(porter) DET NOUN*  => r_has_part;3
26;DET NOUN* ADJ VERB(porter) DET NOUN PRON DET NOUN*  => r_has_part ;3
27;DET NOUN* ADJ VERB(porter) DET NOUN PRON DET NOUN*  => r_has_part;3
28;DET NOUN* VERB(former) DET NOUN*  => r_isa-1;3
29;DET NOUN* VERB(former) DET NOUN PUNCT(,) VERB(appeler) ADV NOUN*  => r_isa-1;3
30;DET NOUN* AUX(être) DET NOUN*  => r_isa ;30
31;DET NOUN* PUNCT(,) CCONJ(voire) DET NOUN*  => r_isa ;16
32;DET NOUN* PUNCT(,) CCONJ(et) PUNCT(,) ADP(dans) DET ADJ NOUN*  => r_lieu ;3
33;DET NOUN* ADP(de) DET NOUN*  => r_isa-1;5
34;VERB(avoir) NOUN* ADP(à) DET NOUN*  => r_isa-1;3
35;DET NOUN* ADP(dans) DET NOUN CCONJ(ou) ADV DET NOUN*  => r_lieu;3
36;DET NOUN* ADP(de) DET PROPN*  => r_lieu;3
37;NUM NOUN* PUNCT(:) DET PROPN*  => r_isa-1;3
38;DET NOUN* ADP(de) DET NOUN*  => r_isa ;4
39;DET NOUN* ADP(de) DET NOUN*  => r_isa ;4
40;DET NOUN* AUX(être) DET ADJ NOUN*  => r_isa ;3
41;DET NOUN* VERB(vivre) ADP(dans) DET NOUN*  => r_isa-1;6
42;DET ADJ* NOUN ADP(à) DET NOUN*  => r_isa-1;3
43;ADJ NOUN* ADP(à) DET NOUN*  => r_isa-1;3
44;DET NOUN* CCONJ(et) DET NOUN*  => r_isa-1;3
45;DET NOUN* ADP(de) DET NOUN*  => r_isa ;7
46;ADP(sur) NOUN* ADP(selon) NUM NOUN*  => r_isa ;3
47;ADP(sur) NOUN* ADP(selon) NUM NOUN*  => r_isa-1;3
48;NUM NOUN* ADJ PUNCT(,) DET ADJ NOUN*  => r_isa ;3
49;NUM NOUN* ADJ PUNCT(,) DET ADJ NOUN*  => r_isa-1;3
50;NOUN ADJ* PUNCT(,) DET ADJ NOUN AUX*  => r_isa ;3
51;DET NOUN* AUX(être) ADJ CCONJ(et) VERB(recouvrir) ADP(de) NOUN*  => r_has_part ;3
52;DET NOUN* ADJ ADP(de) DET NOUN*  => r_isa-1;3
53;DET NOUN* ADJ ADP(de) DET NOUN ADP(de) NOUN*  => r_has_part;3
54;DET NOUN* ADP(de) DET NOUN*  => r_isa-1;3
55;DET NOUN* ADJ ADP(de) DET NOUN*  => r_isa-1;3
56;NOUN ADJ* ADP(de) DET NOUN*  => r_isa-1;3
57;DET NOUN* ADP(de) DET PROPN*  => r_isa-1;13
58;DET NOUN* VERB(avoir) ADP(pour) NOUN*  => r_has_part ;3
59;ADP(à) NOUN* ADP(de) NOUN PUNCT(,) NOUN*  => r_isa ;8
60;ADP(à) NOUN* ADP(de) NOUN PUNCT(,) NOUN* ADJ PUNCT(,) NOUN*  => r_isa ;8
61;DET NOUN* PUNCT(,) CCONJ(et) DET ADJ NOUN*  => r_isa ;3
62;DET ADJ* NOUN PRON VERB*  => r_isa ;3
63;PRON VERB* ADP(à) DET NOUN ADP(de) DET NOUN ADJ*  => r_isa-1;3
64;NOUN VERB* ADV ADV VERB(posséder) ADV*  => r_isa-1;3
65;DET NOUN* SYM VERB(renvoyer) ADP(à) DET NOUN*  => r_isa ;3
66;DET NOUN* ADV ADJ ADP(de) DET NOUN*  => r_isa-1;3
67;ADV ADJ* ADP(de) DET NOUN ADJ ADP(de) DET NOUN*  => r_isa ;3
68;DET NOUN* ADJ ADP(de) DET NOUN*  => r_isa ;6
69;NOUN VERB* ADV ADP(de) NUM NOUN*  => r_isa ;3
70;NOUN VERB* ADV ADP(de) NUM NOUN*  => r_isa-1;3
71;PUNCT(() NOUN* ADJ PUNCT()) CCONJ(et) ADJ DET NOUN*  => r_isa ;3
72;CCONJ(et) ADJ* DET NOUN PRON PRON AUX*  => r_isa ;6
73;ADP(à) PROPN* X PUNCT(() NOUN*  => r_isa ;3
74;ADP(de) PROPN* X PUNCT(() DET NOUN*  => r_isa ;3
75;DET NOUN* ADP(de) DET NOUN*  => r_isa-1;7
76;VERB(exclure) ADJ* NUM ADP(de) DET NOUN*  => r_isa-1;3
77;DET NOUN* PRON VERB(indiquer) PUNCT(,) AUX(être) DET NOUN*  => r_isa ;3
78;PUNCT(,) ADJ* DET NOUN ADP(de) PROPN VERB*  => r_isa ;3
79;PROPN VERB* ADP(à) NOUN ADJ*  => r_isa-1;3
80;ADJ VERB* ADP(dans) DET NOUN*  => r_isa ;3
81;PROPN VERB* ADP(de) DET NOUN X PUNCT(,) PUNCT(«) ADJ*  => r_isa-1;3
82;VERB(comprendre) PROPN* X PUNCT(() NOUN*  => r_isa ;3
83;DET NOUN* ADP(de) NOUN ADP(de) DET NOUN*  => r_isa ;3
84;DET NOUN* ADP(de) NOUN ADP(de) DET NOUN*  => r_isa-1;3
85;ADP(de) NOUN* ADP(de) DET NOUN*  => r_isa ;3
86;ADP(de) NOUN* ADP(de) DET NOUN ADP(de) DET NOUN*  => r_isa-1;3
87;DET ADJ* NOUN ADP(de) DET NOUN*  => r_isa-1;3
88;ADJ NOUN* ADP(de) DET NOUN*  => r_isa-1;5
89;ADJ NOUN* ADP(de) DET NOUN ADP(pour) DET NOUN*  => r_isa-1;3
90;DET NOUN* CCONJ(et) DET NOUN*  => r_isa ;3
91;DET NOUN* ADP(de) PROPN PUNCT(,) AUX(être) DET NOUN*  => r_isa ;3
92;DET NOUN* ADP(de) DET NOUN PROPN PUNCT(() DET NOUN*  => r_isa-1;3
93;PRON VERB* NOUN ADP(de) DET NOUN*  => r_isa ;6
94;DET NOUN* ADP(de) DET PROPN ADP(selon) DET NOUN*  => r_isa ;6
95;DET NOUN* ADP(de) DET PROPN ADP(selon) DET NOUN*  => r_isa-1;6
96;DET NOUN* ADP(de) NOUN PUNCT(,) ADP(de) DET NOUN*  => r_isa ;3
97;DET NOUN* ADP(de) NOUN PUNCT(,) ADP(de) DET NOUN*  => r_isa-1;3
98;ADP(de) NOUN* PUNCT(,) ADP(de) DET NOUN*  => r_isa ;3
99;DET NOUN* VERB(comprendre) DET NOUN*  => r_isa-1;3
100;DET NOUN* ADP(de) PROPN X PUNCT(,) NOUN*  => r_isa ;3
101;NOUN* ADJ* AUX(être) DET NOUN*  => r_isa ;1
102;DET NOUN* ADJ PRON PRON VERB(traduire) ADP(par) DET NOUN*  => r_isa-1;1
103;DET NOUN* ADP(de) NOUN CCONJ(ou) DET NOUN*  => r_isa-1;1
104;DET NOUN* CCONJ(et) DET NOUN*  => r_isa ;3
105;DET NOUN* ADJ PUNCT(,) VERB(comprendre) ADP(de) NOUN ADP(en) NOUN*  => r_isa-1;1
106;ADP(en) NOUN* PUNCT(,) DET NOUN*  => r_isa ;1
101;ADP(de) NOUN* PUNCT(,) ADV ADP(dans) DET NOUN PROPN*  => r_isa-1;1
102;ADV VERB* ADV ADP(pour) PRON VERB*  => r_isa ;1
107;DET NOUN* ADJ PUNCT(,) VERB(constituer) ADP(de) DET NUM NOUN*  => r_isa-1;1
103;ADJ NOUN* AUX(être) DET NOUN*  => r_isa ;1
108;DET NOUN* AUX(être) ADV VERB(diviser) ADP(en) NOUN*  => r_isa ;1
109;DET NOUN* ADJ PUNCT(,) PRON VERB(distinguer) PUNCT(,) ADP(de) NOUN*  => r_isa-1;3
110;DET NOUN* PUNCT(,) DET NOUN PUNCT(,) DET NOUN*  => r_isa-1;1
101;DET NOUN* ADJ CCONJ(et) ADJ ADP(de) NOUN*  => r_isa-1;1
111;DET NOUN* PUNCT(,) DET NOUN PUNCT(,) DET NOUN*  => r_isa ;1
112;DET NOUN* PUNCT(,) DET NOUN*  => r_isa-1;1
102;DET NOUN* ADJ AUX(être) DET ADJ NOUN*  => r_isa ;1
103;NOUN ADJ* AUX(être) DET ADJ NOUN*  => r_isa ;1
105;DET NOUN* PROPN PUNCT(,) ADP(de) DET NOUN*  => r_isa ;1
106;DET NOUN* PROPN PUNCT(,) ADP(de) DET NOUN*  => r_isa-1;1
101;ADP(en) PROPN* PUNCT(,) DET NOUN ADP(de) NOUN*  => r_isa-1;1
102;DET NOUN* ADP(de) NOUN VERB(représenter) DET NOUN*  => r_isa ;1
103;DET NOUN* ADP(de) NOUN VERB(représenter) DET NOUN*  => r_isa-1;1
113;DET NOUN* ADP(à) NOUN AUX(être) DET NOUN*  => r_isa ;1
114;DET NOUN* ADP(à) DET NOUN*  => r_isa ;1
115;DET NOUN* ADP(à) DET NOUN VERB(constituer) ADP(de) DET NOUN*  => r_isa ;1
105;DET NOUN* ADP(à) DET ADV ADP(depuis) DET NOUN*  => r_isa ;1
106;DET NOUN* ADP(de) DET ADJ NOUN*  => r_isa ;1
107;DET NOUN* VERB(porter) DET NOUN ADJ NOUN*  => r_isa ;1
108;DET NOUN* ADJ NOUN ADP(de) PROPN PUNCT(,) PROPN*  => r_isa-1;1
109;ADJ NOUN* ADP(de) PROPN PUNCT(,) PROPN*  => r_isa-1;1
116;DET NOUN* PUNCT(,) DET NOUN*  => r_isa ;3
117;DET NOUN* PUNCT(,) DET NOUN CCONJ(et) DET NOUN*  => r_isa ;1
118;DET NOUN* PUNCT(,) DET NOUN CCONJ(et) DET NOUN*  => r_isa-1;1
119;DET NOUN* ADJ AUX(être) VERB(utiliser) ADP(comme) NOUN*  => r_isa ;1
120;DET NOUN* ADJ AUX(être) VERB(utiliser) ADP(comme) NOUN*  => r_isa-1;1
121;NOUN ADJ* AUX(être) VERB(utiliser) ADP(comme) NOUN*  => r_isa ;1
122;NOUN ADJ* AUX(être) VERB(utiliser) ADP(comme) NOUN ADJ*  => r_isa-1;1
107;DET NOUN* PUNCT(,) DET NOUN ADP(de) DET NOUN*  => r_isa ;1
108;DET NOUN* ADJ PUNCT(,) ADJ SCONJ PROPN PROPN*  => r_isa-1;1
123;DET NOUN* ADP(de) VERB(divertir) DET NOUN*  => r_isa-1;1
124;DET NOUN* PUNCT(,) ADP(de) VERB(développer) DET NOUN*  => r_isa ;1
109;NOUN ADJ* CCONJ(ou) ADP(à) PRON VERB(élever) ADP(sur) NOUN*  => r_isa ;1
110;DET NOUN* VERB(pousser) ADV ADP(dans) DET NOUN*  => r_isa ;1
111;DET NOUN* ADJ ADJ ADP(de) DET NOUN*  => r_isa ;1
112;DET NOUN* ADJ ADJ ADP(de) DET NOUN*  => r_isa-1;1
113;ADJ ADJ* ADP(de) DET NOUN CCONJ(et) DET NOUN*  => r_isa ;1
115;DET NOUN* CCONJ(et) ADP(à) DET NOUN*  => r_isa ;1
110;DET NOUN* AUX(être) ADV VERB(motiver) ADP(par) DET NOUN*  => r_isa-1;1
125;DET NOUN* ADP(de) VERB(avoir) DET NOUN*  => r_isa-1;1
126;DET NOUN* VERB(recouvrir) ADP(de) NOUN*  => r_isa-1;1
127;ADP(de) NOUN* ADJ ADP(comme) DET NOUN*  => r_isa-1;1
128;NOUN ADJ* ADP(comme) DET NOUN*  => r_isa-1;1
111;ADP(en) NOUN* ADP(de) DET NOUN*  => r_isa-1;1
112;DET NOUN* ADP(pour) PRON VERB(récolter) DET NOUN*  => r_isa ;1
113;DET NOUN* DET ADV ADJ ADP(pour) DET NOUN*  => r_isa ;1
129;DET NOUN* ADP(de) PROPN AUX(être) DET NOUN*  => r_isa ;1
130;DET NOUN* VERB(environner) DET NOUN*  => r_isa-1;1
131;DET NOUN* VERB(environner) DET NOUN PROPN ADP(de) DET NOUN*  => r_isa-1;1
132;DET NOUN* ADP(de) PROPN ADP(en) PROPN*  => r_isa-1;1
116;CCONJ(et) PROPN* X X PUNCT(,) AUX(être) DET NOUN*  => r_isa ;1
117;DET NOUN* ADP(de) ADJ NOUN*  => r_isa-1;1
118;DET NOUN* ADP(de) ADJ NOUN CCONJ(ou) ADJ NOUN*  => r_isa-1;1
119;ADJ NOUN* CCONJ(ou) ADJ NOUN*  => r_isa ;1
120;ADJ NOUN* VERB(appartenir) ADP(à) DET NOUN*  => r_isa-1;1
114;DET NOUN* ADJ ADP(de) DET NOUN PUNCT(,) PROPN*  => r_isa ;1
115;DET NOUN* ADJ ADP(de) DET NOUN PUNCT(,) PROPN*  => r_isa-1;1
116;NOUN ADJ* ADP(de) DET NOUN PUNCT(,) PROPN*  => r_isa ;1
117;NOUN ADJ* ADP(de) DET NOUN PUNCT(,) PROPN*  => r_isa-1;1
118;PUNCT(,) PROPN* PUNCT(,) PROPN CCONJ(et) PROPN*  => r_isa ;1
119;PUNCT(,) PROPN* PUNCT(,) PROPN CCONJ(et) PROPN*  => r_isa-1;1
120;PUNCT(,) PROPN* PUNCT(,) PROPN CCONJ(et) PROPN PUNCT(,) DET NOUN*  => r_isa ;1
121;PUNCT(,) PROPN* PUNCT(,) PROPN CCONJ(et) PROPN PUNCT(,) DET NOUN*  => r_isa-1;1
133;PRON VERB* ADV ADP(de) NUM NOUN*  => r_isa ;1
134;DET PROPN* AUX(être) DET ADJ NOUN*  => r_isa ;1
122;NOUN ADJ* CCONJ(et) DET NOUN ADP(de) PROPN AUX*  => r_isa ;1
121;NOUN VERB* ADP(dans) DET NOUN*  => r_isa-1;1
122;DET NOUN* PUNCT(() NOUN PUNCT(,) NOUN*  => r_isa-1;1
123;DET NOUN* PUNCT(() NOUN PUNCT(,) NOUN CCONJ(et) DET NOUN*  => r_isa ;1
124;PUNCT(() NOUN* PUNCT(,) NOUN CCONJ(et) DET NOUN*  => r_isa ;1
125;PUNCT(,) NOUN* CCONJ(et) DET NOUN*  => r_isa ;1
126;DET NOUN* ADJ PUNCT()) ADP(dans) DET NOUN*  => r_isa-1;1
127;DET NOUN* ADP(comme) DET PROPN*  => r_isa-1;1
128;DET NOUN* ADP(comme) DET PROPN CCONJ(et) DET PROPN*  => r_isa-1;1
129;X VERB* VERB(atteindre) ADP(jusque) ADP(à) NUM*  => r_isa-1;1
130;X VERB* VERB(atteindre) ADP(jusque) ADP(à) NUM NOUN ADP(de) NOUN*  => r_isa-1;1
135;DET NOUN* PUNCT(,) VERB(avoir) DET NOUN*  => r_isa ;1
136;DET NOUN* PUNCT(,) VERB(avoir) DET NOUN ADP(avec) DET NOUN*  => r_isa ;1
137;DET NOUN* ADP(de) DET NOUN ADJ PUNCT(,) DET NOUN*  => r_isa ;1
138;DET NOUN* ADP(de) DET NOUN ADJ PUNCT(,) DET NOUN*  => r_isa-1;1
139;DET NOUN* ADJ PUNCT(,) DET NOUN ADJ ADP(de) NOUN*  => r_isa ;1
140;NOUN ADJ* PUNCT(,) DET NOUN*  => r_isa ;1
141;ADP(de) NOUN* ADJ PUNCT(,) ADV SCONJ DET NOUN*  => r_isa ;1
142;ADP(de) NOUN* ADJ PUNCT(,) ADV SCONJ DET NOUN*  => r_isa-1;1
143;NOUN ADJ* PUNCT(,) ADV SCONJ DET*  => r_isa ;1
144;NOUN ADJ* PUNCT(,) ADV SCONJ DET NOUN*  => r_isa ;1
145;NOUN ADJ* PUNCT(,) ADV SCONJ DET NOUN*  => r_isa-1;1
146;DET NOUN* ADV VERB(exister) VERB(prouver) DET NOUN*  => r_isa ;1
123;ADV ADJ* PUNCT(,) ADV AUX*  => r_isa ;1
124;DET NOUN* ADP(de) DET PROPN CCONJ(et) DET ADJ NOUN*  => r_isa ;1
125;DET NOUN* ADP(de) DET PROPN CCONJ(et) DET ADJ NOUN*  => r_isa-1;1
126;DET NOUN* PUNCT(,) DET ADJ NOUN*  => r_isa ;1
356;DET NOUN* ADP(de) DET NOUN*  => r_has_part-1;3
357;NOUN ADJ* PUNCT(() PROPN X PUNCT()) AUX*  => r_has_part ;1
358;NOUN ADJ* PUNCT(() PROPN X PUNCT()) AUX(être) DET NOUN*  => r_has_part-1;1
359;PUNCT(() PROPN* X PUNCT()) AUX(être) DET NOUN*  => r_has_part-1;1
360;PUNCT(() PROPN* X PUNCT()) AUX(être) DET NOUN ADP(de) NOUN*  => r_has_part ;1
361;DET NOUN* ADP(de) NOUN ADJ PUNCT(,) ADP(de) DET NOUN*  => r_has_part ;1
362;DET NOUN* ADP(de) NOUN ADJ PUNCT(,) ADP(de) DET NOUN*  => r_has_part-1;1
363;ADP(de) NOUN* ADJ PUNCT(,) ADP(de) DET NOUN*  => r_has_part ;1
364;ADP(de) NOUN* ADJ PUNCT(,) ADP(de) DET NOUN*  => r_has_part-1;1
365;NOUN ADJ* PUNCT(,) ADP(de) DET NOUN*  => r_has_part-1;1
366;NOUN ADJ* PUNCT(,) ADP(de) DET NOUN ADP(de) DET PROPN*  => r_has_part-1;1
367;NOUN ADJ* PROPN X PUNCT(,) PRON AUX*  => r_has_part ;1
357;NOUN ADJ* ADJ ADJ CCONJ(et) ADJ PRON VERB*  => r_has_part ;1
358;ADJ ADJ* ADJ CCONJ(et) ADJ PRON VERB*  => r_has_part ;1
359;ADJ ADJ* CCONJ(et) ADJ PRON VERB*  => r_has_part ;1
360;CCONJ(et) ADJ* PRON VERB(vivre) ADP(dans) DET NOUN*  => r_has_part ;1
361;DET NOUN* ADJ CCONJ(et) ADJ ADP(de) DET NOUN*  => r_has_part ;1
362;DET NOUN* ADJ CCONJ(et) ADJ ADP(de) DET NOUN*  => r_has_part-1;1
357;NOUN ADJ* ADJ VERB(comporter) DET NOUN*  => r_has_part ;1
358;ADJ ADJ* VERB(comporter) DET NOUN*  => r_has_part ;1
359;DET NOUN* ADP(sur) PRON PRON VERB(inserer) DET NOUN*  => r_has_part-1;1
360;DET NOUN* ADJ VERB(porter) DET NOUN*  => r_has_part ;1
361;DET NOUN* ADJ VERB(porter) DET NOUN*  => r_has_part-1;1
362;DET NOUN* ADJ VERB(porter) DET NOUN PRON DET NOUN*  => r_has_part-1;1
363;DET NOUN* PRON DET NOUN VERB(former) DET NOUN*  => r_has_part-1;1
364;DET NOUN* VERB(former) DET NOUN*  => r_has_part ;1
365;DET NOUN* VERB(former) DET NOUN PUNCT(,) VERB(appeler) ADV NOUN*  => r_has_part ;1
366;DET NOUN* PUNCT(,) VERB(appeler) ADV NOUN*  => r_has_part ;1
367;DET NOUN* AUX(être) DET NOUN*  => r_has_part ;1
368;DET NOUN* AUX(être) DET NOUN*  => r_has_part-1;1
369;DET NOUN* ADJ ADP(de) DET NOUN*  => r_has_part ;3
370;NOUN ADJ* ADP(de) DET NOUN*  => r_has_part-1;3
371;DET NOUN* PUNCT(,) CCONJ(et) PUNCT(,) ADP(dans) DET ADJ NOUN*  => r_has_part-1;1
357;PRON VERB* VERB(désigner) DET NOUN ADP(de) NOUN*  => r_has_part-1;1
358;PRON VERB* VERB(désigner) DET NOUN ADP(de) NOUN ADJ*  => r_has_part-1;1
359;PRON VERB* VERB(désigner) DET NOUN ADP(de) NOUN ADJ VERB*  => r_has_part-1;1
360;NOUN ADJ* VERB(avoir) ADV DET ADJ NOUN*  => r_has_part ;1
361;DET ADJ* NOUN PUNCT(,) DET NOUN*  => r_has_part ;1
362;ADJ NOUN* PUNCT(,) DET NOUN*  => r_has_part-1;1
363;ADJ NOUN* PUNCT(,) DET NOUN ADJ PUNCT(,) DET NOUN*  => r_has_part ;1
364;ADJ NOUN* PUNCT(,) DET NOUN ADJ PUNCT(,) DET NOUN*  => r_has_part-1;1
365;DET NOUN* ADJ PUNCT(,) DET NOUN*  => r_has_part ;1
366;DET NOUN* ADJ CCONJ(et) DET NOUN*  => r_has_part-1;1
368;ADP(de) PROPN* ADP(avec) DET NOUN*  => r_has_part-1;1
371;DET NOUN* ADP(de) PROPN PUNCT(() ADP(en) NOUN*  => r_has_part ;1
372;PRON VERB* DET NOUN*  => r_patient ;3
373;AUX(être) ADJ* ADP(de) DET NOUN ADP(de) NOUN*  => r_has_part ;1
374;AUX(être) ADJ* ADP(de) DET NOUN ADP(de) NOUN*  => r_has_part-1;1
375;PRON VERB* DET NOUN*  => r_patient ;3
376;ADV ADJ* NOUN ADP(de) DET NOUN*  => r_has_part-1;1
377;ADJ NOUN* ADP(de) DET NOUN*  => r_has_part-1;1
378;DET NOUN* PUNCT(,) PRON ADP(de) DET NOUN*  => r_has_part ;1
379;DET NOUN* PUNCT(,) PRON ADP(de) DET NOUN ADP(de) PROPN*  => r_has_part ;1
380;ADP(de) PROPN* PUNCT(,) AUX(avoir) AUX(être) VERB(trouver) ADP(à) DET NOUN*  => r_has_part ;1
381;DET NOUN* ADP(de) DET NOUN NUM DET NOUN*  => r_has_part ;1
382;DET NOUN* NUM DET NOUN*  => r_has_part ;1
367;ADV VERB* PUNCT(,) DET NOUN*  => r_has_part ;1
368;ADV VERB* PUNCT(,) DET NOUN*  => r_has_part-1;1
383;AUX(être) ADJ* ADP(depuis) NUM NOUN*  => r_has_part-1;1
373;DET NOUN* PUNCT(,) PRON PRON AUX(être) DET NOUN*  => r_has_part-1;1
374;DET NOUN* ADP(dans) DET NOUN*  => r_has_part ;1
376;DET NOUN* CCONJ(ou) ADV DET NOUN*  => r_has_part ;1
377;DET NOUN* CCONJ(ou) ADV DET NOUN*  => r_has_part-1;1
378;DET NOUN* ADP(de) DET NOUN*  => r_has_part ;1
379;DET NOUN* ADP(de) DET NOUN*  => r_has_part-1;1
384;DET NOUN* ADP(entre) DET NOUN*  => r_has_part ;1
385;NOUN* ADJ* ADJ CCONJ(et) DET NOUN*  => r_has_part-1;1
386;DET NOUN* ADP(de) DET PROPN ADP(de) DET NOUN*  => r_patient ;3
371;DET NOUN* ADP(de) DET NOUN*  => r_has_part ;1
373;DET NOUN* VERB(classer) ADP(dans) DET NOUN*  => r_has_part-1;1
374;DET NOUN* VERB(classer) ADP(dans) DET NOUN ADP(de) DET PROPN*  => r_has_part-1;1
380;DET NOUN* VERB(vivre) ADP(dans) DET NOUN*  => r_has_part-1;1
381;DET NOUN* VERB(vivre) ADP(dans) DET NOUN ADP(de) NOUN*  => r_has_part ;1
382;DET NOUN* VERB(vivre) ADP(dans) DET NOUN ADP(de) NOUN*  => r_has_part-1;1
383;NOUN VERB* ADP(dans) DET NOUN*  => r_has_part ;1
384;NOUN VERB* ADP(dans) DET NOUN ADP(de) NOUN*  => r_has_part-1;1
387;DET NOUN* CCONJ(et) DET NOUN*  => r_has_part-1;1
363;DET NOUN* ADP(de) DET PROPN VERB(regrouper) ADJ DET NOUN*  => r_has_part-1;1
364;NUM NOUN* PUNCT(:) DET PROPN PUNCT(() NOUN*  => r_has_part-1;1
365;DET NOUN* ADP(de) DET NOUN*  => r_has_part-1;1
366;DET NOUN* AUX(être) ADV VERB(discuter) ADP(depuis) DET NOUN*  => r_has_part ;1
388;DET NOUN* ADP(de) ADJ DET NOUN ADP(de) NOUN*  => r_has_part-1;1
389;DET NOUN* ADP(de) DET NOUN*  => r_has_part ;1
390;DET NOUN* ADP(de) DET NOUN*  => r_has_part-1;1
391;DET NOUN* ADP(de) DET NOUN ADP(à) PROPN*  => r_has_part-1;1
367;PUNCT(«) NOUN* PUNCT(») AUX(être) ADV VERB(utiliser) ADP(pour) DET NOUN*  => r_has_part-1;1
368;DET NOUN* ADP(de) DET NOUN*  => r_has_part ;1
385;ADP(en) NOUN* PUNCT()) AUX(être) DET NOUN*  => r_has_part-1;1
387;DET PROPN* ADP(de) DET NOUN PUNCT(,) ADJ ADP(en) NOUN*  => r_has_part ;1
388;ADP(en) NOUN* VERB(disperser) ADP(dans) DET NOUN ADP(de) DET PROPN*  => r_has_part-1;1
389;DET PROPN* CCONJ(et) DET NOUN ADP(de) DET PROPN*  => r_has_part-1;1
390;DET NOUN* ADP(de) DET PROPN PUNCT(() PROPN PUNCT(,) NOUN*  => r_has_part ;1
376;DET NOUN* ADJ ADP(de) DET NOUN*  => r_has_part-1;1
377;DET NOUN* PUNCT(,) VERB(élever) ADV ADP(comme) NOUN*  => r_has_part ;1
378;DET NOUN* PUNCT(,) VERB(élever) ADV ADP(comme) NOUN*  => r_has_part-1;1
379;DET NOUN* PUNCT(,) VERB(élever) ADV ADP(comme) NOUN ADP(de) NOUN*  => r_has_part ;1
451;ADJ NOUN* PUNCT(,) DET NOUN*  => r_isa-1;1
452;DET NOUN* CCONJ(ou) ADV DET NOUN*  => r_isa ;1
453;DET NOUN* ADJ PUNCT(,) PRON VERB(dépendre) ADP(de) DET NOUN*  => r_isa ;1
451;PUNCT(«) NOUN* PUNCT(») AUX(être) ADV VERB(utiliser) ADP(pour) DET NOUN*  => r_isa ;1
454;DET NOUN* ADP(de) DET PROPN ADP(de) DET NOUN*  => r_isa ;1
452;DET NOUN* ADJ PUNCT(,) PRON VERB(avoir) DET NOUN*  => r_isa ;1
453;PUNCT(,) NOUN* CCONJ(et) NOUN ADP(sur) DET NOUN*  => r_isa ;1
454;ADP(de) NOUN* ADV ADP(de) DET NOUN*  => r_isa-1;1
455;DET ADJ* NOUN PUNCT(,) AUX*  => r_isa ;1
456;ADV VERB* ADP(de) DET NOUN ADP(en) NOUN*  => r_isa ;1
457;ADP(en) NOUN* ADP(de) DET NOUN*  => r_isa ;1
455;NOUN* ADP(de) NUM ADP(à) NUM NOUN ADP(de) NOUN*  => r_isa ;1
456;ADP(de) NOUN* CCONJ(ou) ADP(de) NOUN PUNCT(,) ADP(de) NOUN*  => r_isa ;1
457;ADP(de) NOUN* PUNCT(,) ADP(de) NOUN*  => r_isa ;1
458;DET NOUN* ADP(de) NOUN VERB(exister) ADP(entre) DET ADJ NOUN*  => r_isa ;1
459;ADP(de) NOUN* VERB(exister) ADP(entre) DET ADJ NOUN*  => r_isa ;1
458;DET NOUN* ADP(de) NUM NOUN*  => r_isa-1;1
459;DET NOUN* ADP(de) DET PROPN CCONJ(et) ADP(à) DET NOUN*  => r_isa ;1
460;SCONJ ADJ* DET NOUN PUNCT([) NUM*  => r_isa-1;1
310;DET NOUN* ADP(de) NOUN*  => r_lieu-1;1
311;PRON VERB* ADP(dans) DET NOUN*  => r_lieu ;1
312;DET NOUN* ADJ CCONJ(et) ADJ ADP(de) DET NOUN*  => r_lieu ;1
313;DET NOUN* ADJ CCONJ(et) ADJ ADP(de) DET NOUN*  => r_lieu-1;1
310;DET NOUN* ADJ ADJ VERB(comporter) DET NOUN*  => r_lieu ;1
311;DET NOUN* ADP(sur) PRON PRON VERB(inserer) DET NOUN*  => r_lieu ;1
312;DET NOUN* ADP(sur) PRON PRON VERB(inserer) DET NOUN*  => r_lieu-1;1
313;DET NOUN* ADJ VERB(porter) DET NOUN*  => r_lieu-1;1
314;DET NOUN* PRON DET NOUN VERB(former) DET NOUN*  => r_lieu ;1
315;DET NOUN* ADP(de) DET NOUN*  => r_lieu-1;3
314;PRON VERB* ADP(à) DET ADV NUM NOUN ADP(de) NOUN*  => r_lieu ;1
316;NOUN* AUX(être) ADP(de) NOUN*  => r_lieu-1;1
317;DET NOUN* PUNCT(,) DET NOUN*  => r_lieu-1;1
318;DET NOUN* PUNCT(,) DET NOUN PUNCT(,) CCONJ(voire) DET NOUN*  => r_lieu ;1
319;DET NOUN* PUNCT(,) DET NOUN PUNCT(,) CCONJ(voire) DET NOUN*  => r_lieu-1;1
320;X NOUN* CCONJ(et) NOUN*  => r_lieu-1;1
321;VERB(avoir) NOUN* ADP(à) DET NOUN*  => r_lieu ;1
322;DET NOUN* PUNCT(,) PRON PRON AUX(être) DET NOUN*  => r_lieu-1;1
323;DET NOUN* ADP(dans) DET NOUN*  => r_lieu ;1
324;DET NOUN* ADP(dans) DET NOUN CCONJ(ou) ADV DET NOUN*  => r_lieu-1;1
325;DET NOUN* CCONJ(ou) ADV DET NOUN*  => r_lieu ;1
326;DET NOUN* CCONJ(ou) ADV DET NOUN*  => r_lieu-1;1
327;DET NOUN* ADP(de) DET NOUN*  => r_lieu ;1
328;DET NOUN* ADP(de) DET NOUN*  => r_lieu-1;1
329;DET NOUN* VERB(vivre) ADP(dans) DET NOUN*  => r_lieu ;1
330;DET NOUN* VERB(vivre) ADP(dans) DET NOUN ADP(de) NOUN*  => r_lieu ;1
331;DET NOUN* VERB(vivre) ADP(dans) DET NOUN ADP(de) NOUN*  => r_lieu-1;1
332;NOUN VERB* ADP(dans) DET NOUN ADP(de) NOUN*  => r_lieu-1;1
333;DET NOUN* ADP(de) NOUN*  => r_lieu-1;1
334;DET NOUN* ADJ PUNCT(,) PRON VERB(dépendre) ADP(de) DET NOUN*  => r_lieu ;1
335;NOUN ADJ* PUNCT(,) PRON VERB(dépendre) ADP(de) DET NOUN*  => r_lieu ;1
316;ADJ NOUN* ADP(à) DET NOUN*  => r_lieu ;1
317;DET NOUN* ADJ PUNCT(,) PRON VERB(avoir) DET NOUN*  => r_lieu-1;1
336;ADP(de) NOUN* ADJ ADP(de) DET NOUN ADP(de) DET PROPN*  => r_lieu ;1
337;NOUN ADJ* ADP(de) DET NOUN ADP(de) DET PROPN*  => r_lieu ;1
338;DET NOUN* ADP(de) DET PROPN*  => r_lieu ;3
339;DET NOUN* ADP(de) DET PROPN ADP(de) DET NOUN*  => r_lieu ;1
340;DET NOUN* ADP(de) DET PROPN ADP(de) DET NOUN*  => r_lieu-1;1
341;DET PROPN* ADP(de) DET NOUN*  => r_lieu-1;1
342;DET PROPN* ADP(de) DET NOUN PUNCT(,) ADJ ADP(en) NOUN*  => r_lieu-1;1
343;DET NOUN* PUNCT(,) ADJ ADP(en) NOUN*  => r_lieu-1;1
344;ADP(en) NOUN* VERB(disperser) ADP(dans) DET NOUN*  => r_lieu ;1
345;ADP(en) NOUN* VERB(disperser) ADP(dans) DET NOUN ADP(de) DET PROPN*  => r_lieu ;1
346;DET NOUN* ADP(de) DET PROPN CCONJ(et) DET NOUN*  => r_lieu-1;1
347;DET PROPN* CCONJ(et) DET NOUN*  => r_lieu-1;1
348;DET PROPN* CCONJ(et) DET NOUN ADP(de) DET PROPN*  => r_lieu ;1
349;DET NOUN* ADP(de) DET PROPN PUNCT(() PROPN PUNCT(,) NOUN*  => r_lieu ;1
350;DET NOUN* ADP(de) DET PROPN PUNCT(() PROPN PUNCT(,) NOUN*  => r_lieu-1;1
351;DET PROPN* PUNCT(() PROPN PUNCT(,) NOUN*  => r_lieu-1;1
352;DET PROPN* PUNCT(() PROPN PUNCT(,) NOUN ADP(de) DET PROPN*  => r_lieu-1;1
353;PUNCT(() PROPN* PUNCT(,) NOUN ADP(de) DET PROPN*  => r_lieu ;1
318;DET NOUN* PUNCT(,) NOUN*  => r_lieu ;1
319;DET NOUN* PUNCT(,) NOUN CCONJ(et) NOUN ADP(sur) DET NOUN*  => r_lieu ;1
320;PUNCT(,) NOUN* CCONJ(et) NOUN*  => r_lieu-1;1
321;PUNCT(,) NOUN* CCONJ(et) NOUN ADP(sur) DET NOUN*  => r_lieu ;1
322;CCONJ(et) NOUN* ADP(sur) DET NOUN*  => r_lieu ;1
323;CCONJ(et) NOUN* ADP(sur) DET NOUN ADP(de) DET NOUN*  => r_lieu ;1
324;DET NOUN* ADP(de) DET NOUN*  => r_lieu ;1
365;PRON VERB* ADP(dans) DET NOUN ADJ CCONJ(et) ADJ ADP*  => r_patient ;1
366;DET NOUN* ADJ CCONJ(et) ADJ ADP(de) DET NOUN*  => r_patient ;1
365;ADJ VERB* DET* NOUN ADP(sur) PRON PRON VERB(inserer) DET*  => r_patient ;1
366;ADJ VERB* DET NOUN*  => r_patient ;1
367;ADJ VERB* DET NOUN PRON DET NOUN*  => r_patient ;1
368;ADJ VERB* DET NOUN PRON DET NOUN VERB*  => r_patient-1;1
369;NOUN VERB* DET NOUN PUNCT(,) VERB(appeler) ADV NOUN*  => r_patient ;1
370;PUNCT(,) VERB* ADV NOUN*  => r_patient ;1
367;AUX(être) VERB* ADP(sous) DET NOUN*  => r_patient ;1
371;DET NOUN* AUX(être) DET NOUN*  => r_patient-1;1
373;PRON VERB* DET NOUN PUNCT*  => r_patient ;1
374;PRON VERB* DET NOUN PUNCT* DET NOUN PUNCT*  => r_patient ;1
368;ADJ VERB* DET NOUN*  => r_patient ;1
369;PROPN ADJ* PUNCT(,) PRON PRON VERB*  => r_patient-1;1
376;PUNCT(:) VERB* PUNCT(,) VERB(habiter) PUNCT()) VERB(qualifier) PRON PRON VERB*  => r_patient ;1
377;PUNCT()) VERB* PRON PRON VERB(avoir) NOUN*  => r_patient ;1
378;DET NOUN* CCONJ(ou) ADV DET NOUN*  => r_patient ;1
379;DET NOUN* ADP(de) DET NOUN*  => r_patient-1;1
370;AUX(être) VERB* ADV ADP(comme) DET ADV*  => r_patient ;1
371;AUX(être) VERB* ADV ADP(comme) DET ADV ADJ*  => r_patient ;1
373;AUX(être) VERB* ADV ADP(comme) DET ADV ADJ NOUN ADP*  => r_patient ;1
374;ADV ADJ* NOUN ADP(de) DET NOUN PUNCT(,) PRON VERB*  => r_patient-1;1
380;NOUN VERB* ADP(dans) DET NOUN ADP*  => r_patient ;1
381;NOUN VERB* ADP(dans) DET NOUN ADP(de) NOUN*  => r_patient ;1
382;NOUN VERB* ADP(dans) DET NOUN ADP(de) NOUN*  => r_patient-1;1
383;ADJ VERB* ADV DET NOUN*  => r_patient ;1
384;ADJ VERB* ADV DET NOUN ADJ*  => r_patient ;1
385;PRON VERB* ADP(de) DET NOUN ADJ*  => r_patient ;1
376;PUNCT(,) VERB* ADP(en) NUM*  => r_patient ;1
377;PUNCT(,) VERB* ADP(en) NUM CCONJ(ou) NUM*  => r_patient ;1
378;PUNCT(,) VERB* ADP(en) NUM CCONJ(ou) NUM NOUN*  => r_patient ;1
379;ADV VERB* ADP(pour) DET NOUN*  => r_patient ;1
380;ADV VERB* ADP(pour) DET NOUN ADP*  => r_patient ;1
381;ADV VERB* ADP(pour) DET NOUN ADP(de) DET NOUN*  => r_patient ;1
382;ADP(de) VERB* DET NOUN*  => r_patient ;1
387;DET NOUN* ADP(de) DET PROPN PUNCT(() PROPN PUNCT(,) NOUN*  => r_patient ;1
388;ADV VERB* ADP(à) DET NOUN ADP(à) NOUN*  => r_patient ;1
389;ADV VERB* ADP(à) DET NOUN ADP(à) NOUN PUNCT*  => r_patient ;1
390;AUX(être) VERB* ADP(comme) PRON ADP*  => r_patient ;1
391;AUX(être) VERB* ADP(comme) PRON ADP(de) DET*  => r_patient ;1
392;AUX(être) VERB* ADP(comme) PRON ADP(de) DET NOUN*  => r_patient ;1
393;AUX(être) VERB* ADP(comme) PRON ADP(de) DET NOUN ADP*  => r_patient ;1
383;PRON VERB* DET NOUN ADP(de) DET NOUN*  => r_patient ;1
394;PRON VERB* ADP(comme) DET NOUN*  => r_patient ;1
395;PRON VERB* ADP(comme) DET NOUN ADP(à) NOUN*  => r_patient ;1
396;PRON VERB* ADP(comme) DET NOUN ADP(à) NOUN ADJ ADP*  => r_patient ;1
397;DET NOUN* ADP(à) NOUN*  => r_patient ;1
384;PRON VERB* DET ADJ NOUN*  => r_patient ;1
385;DET NOUN* ADP(de) DET NOUN*  => r_patient-1;1
398;ADP(de) NOUN* ADP(de) NOUN*  => r_patient ;1
399;DET NOUN* ADP(de) DET PROPN ADP(de) DET NOUN*  => r_patient-1;1
400;PRON VERB* ADV PROPN ADP(à) NOUN*  => r_patient ;1
401;PRON VERB* ADV PROPN ADP(à) NOUN PUNCT*  => r_patient ;1
402;PRON VERB* ADV PROPN ADP(à) NOUN PUNCT(,) ADV ADP*  => r_patient ;1
403;PRON VERB* DET NOUN ADP*  => r_patient ;1
386;DET ADJ* NOUN CCONJ(et) PRON PRON VERB*  => r_patient-1;1
387;PRON VERB* ADP(sur) NOUN*  => r_patient ;1
388;PRON VERB* ADP(sur) NOUN ADP(selon) NUM NOUN*  => r_patient ;1
389;PRON VERB* DET NOUN ADJ CCONJ(et) DET NOUN ADJ*  => r_patient ;1
