1;ADP(entre) NOUN* CCONJ(et) DET NOUN*  => r_carac ;1
2;NOUN ADJ* AUX(avoir) ADV ADV AUX*  => r_carac-1;1
3;VERB(coloniser) ADJ* DET NOUN ADJ*  => r_carac ;1
4;DET ADJ* NOUN ADP(dans) DET NOUN*  => r_carac-1;1
5;NOUN ADJ* ADP(de) DET NOUN*  => r_carac-1;9
6;ADV ADJ* ADP(de) DET NOUN*  => r_carac-1;2
7;ADP(de) NOUN* ADJ ADP(à) NOUN*  => r_carac-1;1
8;PUNCT(,) ADJ* ADP(de) DET NOUN*  => r_carac-1;3
9;DET NOUN* PUNCT()) PUNCT(,) DET NOUN*  => r_carac-1;3
10;DET NOUN* CCONJ(et) DET NOUN*  => r_carac ;3
11;NOUN ADJ* ADP(sur) DET ADJ*  => r_carac ;3
12;ADP(de) NOUN* ADP(à) DET NOUN*  => r_carac-1;3
13;AUX(être) ADJ* PUNCT(,) VERB(avoir) ADV*  => r_carac-1;3
14;AUX(être) ADJ* PUNCT(,) VERB(avoir) ADV DET*  => r_carac-1;3
15;NOUN ADJ* PUNCT(,) DET ADJ*  => r_carac ;3
16;NOUN ADJ* PUNCT(,) DET ADJ NOUN*  => r_carac-1;3
17;DET ADJ* NOUN PUNCT(,) ADP*  => r_carac-1;3
18;DET ADJ* NOUN PUNCT(,) DET NOUN*  => r_carac-1;3
19;NOUN ADJ* PUNCT(,) VERB(vivre) ADV*  => r_carac-1;3
20;NOUN ADJ* CCONJ(ou) ADP(en) ADJ*  => r_carac ;3
21;NOUN ADJ* CCONJ(ou) ADP(en) ADJ*  => r_carac-1;3
22;NOUN ADJ* CCONJ(ou) ADP(en) ADJ NOUN*  => r_carac-1;3
23;ADP(en) ADJ* NOUN CCONJ(et) PRON*  => r_carac-1;3
24;ADP(de) NOUN* AUX(être) VERB(élever) DET NOUN*  => r_carac-1;3
25;DET NOUN* ADJ ADP(de) DET NOUN*  => r_carac-1;2
26;NOUN ADJ* ADP(de) DET NOUN NOUN*  => r_carac-1;2
27;PROPN ADJ* CCONJ(et) VERB(rester) ADV*  => r_carac-1;2
28;DET ADJ* NOUN ADP(de) NOUN*  => r_carac-1;1
29;ADP(de) NOUN* PUNCT(,) PRON DET NOUN*  => r_carac ;1
30;NOUN ADJ* PUNCT(,) DET NOUN*  => r_carac-1;2
31;ADJ* DET NOUN NOUN*  => r_carac-1;1
32;DET ADJ* PUNCT()) PUNCT([) NUM*  => r_carac-1;1
33;DET ADJ* PUNCT()) PUNCT([) NUM PUNCT*  => r_carac-1;1
34;DET NOUN* ADP(à) DET NOUN*  => r_carac-1;3
35;AUX(avoir) VERB* ADP(dans) DET ADJ*  => r_carac ;2
36;AUX(avoir) VERB* ADP(dans) DET ADJ NOUN*  => r_carac ;2
37;DET ADJ* ADJ PUNCT(,) PRON*  => r_carac-1;2
38;DET ADJ* ADJ PUNCT(,) PRON PRON*  => r_carac-1;2
39;NOUN ADJ* CCONJ(et) ADP(à) DET NOUN*  => r_carac-1;2
40;PUNCT(«) NOUN* NOUN ADP(de) NOUN*  => r_carac-1;2
41;ADP(pour) VERB* ADV ADV ADJ*  => r_carac ;2
42;ADV ADJ* SCONJ DET NOUN*  => r_carac-1;2
43;AUX(être) ADJ* ADP(comme) DET NOUN*  => r_carac-1;2
44;ADV ADJ* SCONJ DET NOUN ADJ*  => r_carac-1;1
45;DET NOUN* ADJ ADP(de) NOUN*  => r_carac ;5
46;ADP(de) NOUN* ADP(de) DET NOUN*  => r_carac-1;2
47;NOUN ADJ* ADP(jusque) ADP(à) DET NOUN*  => r_carac ;2
48;NOUN ADJ* ADP(jusque) ADP(à) DET NOUN*  => r_carac-1;4
49;ADJ ADJ* PRON VERB(partager) DET NOUN*  => r_carac-1;1
50;ADV ADJ* SCONJ(que) DET NOUN*  => r_carac-1;5
51;ADV ADJ* SCONJ(que) DET NOUN ADJ*  => r_carac-1;1
52;NOUN ADJ* ADP(de) DET NOUN PROPN*  => r_carac-1;1
53;ADV ADJ* SCONJ(que) DET NOUN NOUN*  => r_carac ;2
54;PROPN ADJ* ADP(à) DET NOUN*  => r_carac-1;1
55;PRON VERB* DET NOUN ADJ*  => r_carac ;1
56;DET NOUN* ADP(de) DET NOUN*  => r_carac-1;2
57;NOUN ADJ* PUNCT(») PUNCT()) AUX*  => r_carac-1;1
58;DET NOUN* CCONJ(et) DET PROPN*  => r_carac-1;1
59;ADP(de) NOUN* CCONJ(et) VERB(peser) ADP(en) NOUN*  => r_carac ;1
60;ADV ADJ* PUNCT(,) DET X*  => r_carac-1;1
61;ADV ADJ* PUNCT(,) DET NOUN*  => r_carac-1;1
62;ADV* ADJ* PUNCT(,) DET NOUN ADV*  => r_carac-1;2
63;ADV ADJ* CCONJ(et) ADV ADJ*  => r_carac ;3
64;ADV ADJ* CCONJ(et) ADV ADJ*  => r_carac-1;2
65;ADV ADJ* PUNCT(() DET NOUN*  => r_carac-1;1
66;AUX(être) ADJ* ADP(de) VERB(broyer) DET NOUN*  => r_carac-1;1
67;ADV ADJ* NOUN SCONJ(que) DET NOUN*  => r_carac-1;1
68;ADV ADJ* CCONJ(et) ADP(de) ADJ*  => r_carac ;1
69;ADV ADJ* CCONJ(et) ADP(de) ADJ*  => r_carac-1;1
70;ADV ADJ* CCONJ(et) ADP(de) ADJ NOUN*  => r_carac-1;1
71;DET ADJ* NOUN PRON VERB*  => r_carac-1;1
72;NOUN ADJ* ADP(pour) DET NOUN*  => r_carac-1;1
73;ADP(de) NOUN* ADP(de) ADJ NOUN*  => r_carac-1;1
74;PUNCT()) ADJ* ADP(de) DET NOUN*  => r_carac-1;1
75;NOUN ADJ* PUNCT(() NUM NOUN*  => r_carac-1;1
76;NUM NOUN* ADP(à) DET NOUN*  => r_carac ;2
77;NOUN NOUN* PUNCT(() NUM NOUN*  => r_carac-1;1
78;NOUN ADJ* PUNCT()) AUX(être) DET NOUN*  => r_carac-1;1
79;DET ADJ* NOUN VERB(ressembler) ADP*  => r_carac-1;1
80;DET* ADJ* NOUN VERB(ressembler) ADP(à) DET*  => r_carac-1;1
81;ADJ NOUN* VERB(ressembler) ADP(à) DET NOUN*  => r_carac-1;1
82;NOUN ADJ* VERB(suggérer) SCONJ(que) DET NOUN*  => r_carac-1;1
83;NOUN ADJ* ADP(de) DET NOUN ADJ*  => r_carac-1;1
84;NOUN ADJ* AUX(être) VERB(composer) ADP(de) NOUN*  => r_carac-1;1
85;AUX(être) ADJ* ADP(de) VERB(estimer) DET NOUN*  => r_carac-1;1
86;DET ADJ* PROPN AUX(être) DET NOUN*  => r_carac ;1
87;DET ADJ* PROPN AUX(être) DET NOUN*  => r_carac-1;1
88;DET NOUN* CCONJ(et) ADP(à) DET NOUN*  => r_carac ;2
89;DET NOUN* CCONJ(et) ADP(à) DET NOUN*  => r_carac-1;2
90;NOUN ADJ* ADP(de) DET PROPN*  => r_carac-1;1
91;NOUN ADJ* PROPN PROPN PROPN PROPN*  => r_carac-1;1
92;ADV ADJ* PUNCT(() PROPN X PROPN*  => r_carac-1;1
93;DET NOUN* PROPN VERB(couler) ADP(à) NOUN*  => r_carac-1;1
94;DET NOUN* ADP(de) DET PROPN*  => r_carac-1;2
95;DET ADJ* NOUN ADP(comme) DET NOUN*  => r_carac-1;1
96;ADJ NOUN* ADP(comme) DET NOUN*  => r_carac ;1
97;NOUN* ADJ* CCONJ(et) DET NOUN*  => r_carac-1;1
98;NOUN ADJ* CCONJ(et) DET NOUN ADJ*  => r_carac ;1
99;ADV ADJ* NOUN CCONJ(et) NOUN*  => r_carac-1;1
100;DET ADJ* NOUN SCONJ(que) DET*  => r_carac-1;1
101;DET ADJ* NOUN SCONJ(que) DET NOUN*  => r_carac-1;1
102;NOUN ADJ* PUNCT(,) CCONJ(mais) VERB*  => r_carac-1;1
103;NOUN ADJ* PUNCT(,) CCONJ(mais) VERB(avoir) DET*  => r_carac-1;1
104;CCONJ(mais) VERB* DET NOUN ADV ADJ*  => r_carac ;1
105;ADV ADJ* CCONJ(et) DET NOUN*  => r_carac-1;1
106;ADV* ADJ* CCONJ(et) DET NOUN ADV*  => r_carac-1;1
107;DET NOUN* ADP(de) DET NOUN*  => r_carac ;1
108;ADV ADJ* NOUN ADP(par) NOUN*  => r_carac-1;1
109;NOUN ADJ* PUNCT(,) PRON VERB*  => r_carac-1;1
110;NOUN ADJ* PUNCT(,) PRON VERB(avoir) NUM*  => r_carac-1;1
111;DET ADJ* ADP(de) DET NOUN*  => r_carac-1;1
112;NOUN ADJ* ADP(de) ADV ADJ*  => r_carac-1;1
113;NOUN ADJ* ADP(de) ADV ADJ NOUN*  => r_carac-1;1
114;NOUN ADJ* CCONJ(et) DET ADJ*  => r_carac ;1
115;NOUN ADJ* CCONJ(et) DET ADJ NOUN*  => r_carac-1;1
116;NOUN ADJ* ADP(à) PRON ADP(de) DET*  => r_carac-1;1
117;NUM ADJ* NOUN ADP(de) NOUN*  => r_carac-1;1
118;DET NOUN* ADP(de) ADJ NOUN*  => r_carac-1;1
119;CCONJ(et) ADJ* CCONJ(et) DET NOUN*  => r_carac-1;1
120;ADP(de) ADJ* NOUN CCONJ(et) ADP(de) NOUN*  => r_carac-1;1
121;ADV ADJ* ADP(à) DET NOUN*  => r_carac-1;1
122;DET NOUN* PUNCT(,) DET NOUN*  => r_carac ;1
123;ADP(de) ADJ* NOUN ADJ ADV SCONJ*  => r_carac-1;1
124;NOUN ADJ* ADP(de) NOUN ADV*  => r_carac-1;1
125;NOUN ADJ* ADP(de) NOUN ADV ADJ*  => r_carac-1;1
126;NOUN ADJ* ADP(de) NOUN ADJ*  => r_carac-1;3
127;ADP(de) NOUN* ADJ ADP(de) DET NOUN*  => r_carac-1;3
128;ADJ NOUN* ADP(de) DET NOUN*  => r_carac-1;3
129;DET ADJ* NOUN ADP(en) NUM*  => r_carac-1;2
130;DET ADJ* NOUN ADP(en) NUM ADP*  => r_carac-1;3
